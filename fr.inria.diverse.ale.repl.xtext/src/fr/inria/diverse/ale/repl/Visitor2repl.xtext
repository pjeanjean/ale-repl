grammar fr.inria.diverse.ale.repl.Visitor2repl with org.eclipse.emf.ecoretools.Ale

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/emf/ecoretools/Ale" as ale
generate visitor2repl "http://www.inria.fr/diverse/ale/repl/visitor2repl"

Transformation:
	model=Model interpreter=Interpreter instructions+=Instruction+;

Model:
	'import' packages+=[ecore::EPackage|FQN] (',' packages+=[ecore::EPackage|FQN])*;

FQN:
	ValidID ("." ValidID)*;

Interpreter:
	'repl' name=ValidID
	('{'
		('attribute' attributes+=rAttribute)*
		('initrepl' initMethod=rOperation)?
	'}')?;

Instruction:
	'instruction' classifier=[ecore::EClassifier|FQN] ':'
	evalMethod=ValidID '(' (evalParams+=expression)? (',' evalParams+=expression)* ')'
	('=>' evalResult=expression)? ';';

@Override 
nonLeftRecExpression returns ale::Expression:
	super::nonLeftRecExpression
	| SelfRef | OutputRef | InterpreterAttributeRef;
	
SelfRef returns ale::Expression:
	{SelfRef} '_self';
	
OutputRef returns ale::Expression:
	{OutputRef} 'output';

InterpreterAttributeRef returns ale::Expression:
	{InterpreterAttributeRef} target=[Interpreter|ValidID] '.' feature=[ale::Attribute|ValidID];
	
ValidID:
	Ident;
