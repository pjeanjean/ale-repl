/*
 * generated by Xtext 2.14.0
 */
package fr.inria.diverse.ale.repl.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import fr.inria.diverse.ale.repl.visitor2repl.InterpreterAttributeRef
import fr.inria.diverse.ale.repl.visitor2repl.Visitor2replPackage
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.EcoreUtil2
import fr.inria.diverse.ale.repl.visitor2repl.Transformation

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class Visitor2replScopeProvider extends AbstractVisitor2replScopeProvider {

	override getScope(EObject context, EReference reference) {
		if (context instanceof InterpreterAttributeRef
				&& reference == Visitor2replPackage.Literals.INTERPRETER_ATTRIBUTE_REF__FEATURE) {
			val transformation = EcoreUtil2.getRootContainer(context) as Transformation
			return Scopes.scopeFor(transformation.interpreter.attributes)
		}
		
		return super.getScope(context, reference)
	}

}
